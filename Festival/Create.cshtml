@model DiethelmTSWebsite2015.Models.Festival
@using DiethelmTSWebsite2015.Core;

@{
    ViewBag.Title = "Create";
    byte countryID = Utility.GetCurrentCountryID();
}

<h2>Create</h2>

@using (Html.BeginForm("Create", "Festival", FormMethod.Post, new { id = "main-form" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>Festival</legend>

        <input type="hidden" id="CountryID" name="CountryID" value="@countryID" />
        <div class="editor-label">
            @Html.LabelFor(model => model.FestivalName)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.FestivalName)
            @Html.ValidationMessageFor(model => model.FestivalName)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Location)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Location)
            @Html.ValidationMessageFor(model => model.Location)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.City)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.City)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.DateFrom)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.DateFrom)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.DateTo)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.DateTo)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.NearestAirport)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.NearestAirport)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Theme)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Theme)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Description)
        </div>
        <div class="editor-field">
            @Html.TextAreaFor(model => model.Description)
        </div>

        <div class="columns small-2 editor-label">
            @Html.LabelFor(model => model.Thumbnail)
            @Html.HiddenFor(model => model.Thumbnail)
        </div>

        <div class="columns small-10 editor-label">
            <img id="imgThumbnail" src="@Url.Content("~/Images/Noimage.jpg")" />
            <br />
            <img id="removeImgThumbnail" style="display:none;" class="removeCursor" src="@Url.Content("~/Images/delimg.png")" onclick="RemoveImg()" />
            <br />
        </div>
        <div class="columns push-2 small-12 editor-field padding-bottom-15">
            <input type="button" value="Select Image" onclick="$('#thumb-upload').trigger('click');">
            &nbsp; &nbsp;<text id="thumbnailFileName"></text><text id="upload-thumb-success" style="color: greenyellow; display: none;">&nbsp;&nbsp; Success</text>&nbsp;&nbsp;
            <img src="@Url.Content("~/Images/loading.gif")" id="loading" style="display:none;" />
        </div>
        <div class="columns small-12 text-right">
            <input type="button" onclick="Submit();" value="Save" class="button radius tiny" /> &nbsp;
            <input type="button" value="Cancel" class="button radius tiny" onclick="history.back();" />
        </div>
    </fieldset>
}
<form id="frmUpload" action="@Url.Action("UploadThumbnail", "SysPost")" method="post" enctype="multipart/form-data">
    <input type="file" name="files[]" id="thumb-upload" style="display: none;" accept="image/*" />
</form>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/jqueryfileupload")
    <script type="text/javascript">
        function Submit() {
            $('#main-form').submit();
        }

        function RemoveImg() {
            if (confirm("Do you want to remove the thumbnail?")) {
                $("#Image").val("");
                $("#imgThumbnail").attr("src", '@Url.Content("~/Images/Noimage.jpg")');
                $("#removeImgThumbnail").hide();
                $("#thumbnailFileName").hide();
                $("#upload-thumb-success").hide();
            }
        }
        $(document).ready(function () {
            $("#frmUpload").fileupload({
                add: function (e, data) {
                    var goUpload = true;
                    var uploadFile = data.files[0];

                    $("#btn-submit").prop('disabled', true);
                    $("#thumbnailFileName").html(uploadFile.name);
                    $("#upload-thumb-success").hide();

                    if (!(/\.(jpg|png|JPG|PNG)$/i).test(uploadFile.name)) {
                        alert('สามารถอัพโหลดได้เฉพาะไฟล์ .jpg และ .png เท่านั้น');
                        $("#thumbnailFileName").html("");
                        goUpload = false;
                    }
                    /*  if (uploadFile.size > 200 * 1024 * 1024) {
                          alert('Please upload a smaller image, max size is 200 MB [' + uploadFile.name + ']');
                          goUpload = false;
                      } */
                    if (goUpload) {
                        $("#loading").show();
                        data.progressdiv = $("#uploading-origin").clone().attr("id", "").css("display", "").attr("title", uploadFile.name);
                        data.progressdiv.appendTo($("#drop-l"));
                        data.progressdiv.find(".glyphicon-repeat").on("click", function (event) {
                            event.stopPropagation();
                            data.progressdiv.find(".loading").show();
                            data.progressdiv.find(".retry").hide();
                            data.progressdiv.find(".progress-bar").css("width", "0%");
                            data.progressdiv.find(".progress-bar").removeClass("progress-bar-danger");
                            data.submit();
                        });
                        data.progressdiv.find(".glyphicon-remove").on("click", function (event) {
                            event.stopPropagation();
                            data.progressdiv.remove();
                            delete data;
                        });

                        data.progressdiv.on("click", function (event) {
                            event.stopPropagation();
                        });
                        $("#drop-l").removeClass("background");
                        data.submit();
                    }

                },
                progress: function (e, data) {
                    var progress = parseInt(data.loaded / data.total * 100, 10);
                    data.progressdiv.find(".progress-bar").css("width", progress + "%");
                },
                done: function (e, data) {
                    $("#loading").hide();
                    $("#upload-thumb-success").show();
                    $("#btn-submit").prop('disabled', false);
                    $("#Body").val(data.result);
                    setTimeout(function () {
                        data.progressdiv.remove();
                        if (!$("#drop-l").children().length) {
                            $("#drop-l").addClass("background");
                        }
                    }, 500);

                    var img_o = data.result;

                    $("#Thumbnail").val(img_o);

                    $("#imgThumbnail").attr("src", '@Url.Content("~/assets/thumbnail/")' + 'm-' + img_o);

                    $("#removeImgThumbnail").show();
                },
                fail: function (e, data) {

                    data.progressdiv.find(".loading").hide();
                    data.progressdiv.find(".retry").show();
                    data.progressdiv.find(".progress-bar").css("width", "100%");
                    data.progressdiv.find(".progress-bar").addClass("progress-bar-danger");
                }
            });
        });
    </script>
}
