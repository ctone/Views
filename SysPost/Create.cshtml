@using DiethelmTSWebsite2015.Biz;
@using DiethelmTSWebsite2015.Extensions;

@model DiethelmTSWebsite2015.Models.SysPost

@{
    ViewBag.Title = "Create";

    string createID = Guid.NewGuid().ToString();

    string country = Request.RequestContext.RouteData.Values["country"].ToString();
    DiethelmTSWebsite2015.Biz.CountryCollection countryColl = new DiethelmTSWebsite2015.Biz.CountryCollection();

    SysCategoryBiz biz = new SysCategoryBiz();
    var catList = biz.Get(countryColl[country].ID);

    string catID = "";
    string catName = "General Content";

    if (!string.IsNullOrEmpty(Request.QueryString["catID"]))
    {
        catID = Request.QueryString["catID"];
        catName = biz.GetByCatID(Int32.Parse(catID)).Title;
    }
}

@section Header {
    @Scripts.Render("~/bundles/ckeditor")
}

<style type="text/css">
    #dropZone {
        background: gray;
        border: black dashed 3px;
        width: 200px;
        padding: 50px;
        text-align: center;
        color: white;
    }

    .removeCursor {
        cursor: pointer;
    }
</style>
<fieldset>
    <legend>Create : @catName</legend>
    <div class="row">
        @using (Html.BeginForm("Create", "SysPost", FormMethod.Post, new { id = "main-form" }))
        {
            @Html.ValidationSummary(true)

            <input type="hidden" id="CountryID" name="CountryID" value="@countryColl[country].ID" />
            <div class="columns small-2 editor-label">
                @Html.LabelFor(model => model.Title)
            </div>
            <div class="columns small-10 editor-field">
                @Html.EditorFor(model => model.Title)
                @Html.ValidationMessageFor(model => model.Title)
            </div>

            @*Nop Comment ถ้่าใช้แบบนี้มันจะ bug ตอน add new sub category มันจะหา cateogry ไม่เจอ*@
            @*<div class="columns small-2 editor-label">
                @Html.LabelFor(model => model.SysCategoryID, "Category")
            </div>
            <div class="columns small-10 editor-field">
                @Html.CategoryDropDownListFor(model => model.SysCategoryID)
            </div>*@
            
            <div class="columns small-2 editor-label">
                @Html.LabelFor(model => model.SysCategoryID, "Category")
            </div>
            <div class="columns small-10 editor-field">
                <select id="SysCategoryID" name="SysCategoryID">
                    <option value="">None</option>

                    @foreach (var item in catList)
                    {
                        <option value="@item.ID">@item.Title</option>
                    }
                </select>
            </div>

            <div class="columns small-2 editor-label">
                @Html.LabelFor(model => model.ShortDescription)
            </div>
            <div class="columns small-10 editor-field">
                @Html.EditorFor(model => model.ShortDescription)
                @Html.ValidationMessageFor(model => model.ShortDescription)
            </div>

            <div class="columns small-12 editor-label">
                @Html.LabelFor(model => model.Description)
            </div>
            <div class="columns small-12 editor-field padding-bottom-15">
                @Html.TextArea("txtDescription", htmlAttributes: new { @class = "ckeditor" })
                @Html.HiddenFor(model => model.Description)
            </div>

            <div class="columns small-2 editor-label">
                @Html.LabelFor(model => model.StartDate)
            </div>
            <div class="columns small-10 editor-field">
                @Html.EditorFor(model => model.StartDate)
                @Html.ValidationMessageFor(model => model.StartDate)
            </div>

            <div class="columns small-2 editor-label">
                @Html.LabelFor(model => model.EndDate)
            </div>
            <div class="columns small-10 editor-field">
                @Html.EditorFor(model => model.EndDate)
                @Html.ValidationMessageFor(model => model.EndDate)
            </div>

            <div class="columns small-2 editor-label">
                @Html.LabelFor(model => model.Code)
            </div>
            <div class="columns small-10 editor-field">
                @Html.EditorFor(model => model.Code)
                @Html.ValidationMessageFor(model => model.Code)
            </div>

            <div class="columns small-12 push-2">
                @Html.EditorFor(model => model.IsPublish) Publish
                @Html.ValidationMessageFor(model => model.IsPublish)
            </div>

            <div class="columns small-12 push-2">
                @Html.EditorFor(model => model.IsHighlight) Highlight
                @Html.ValidationMessageFor(model => model.IsHighlight)
            </div>

            <div class="columns small-2 editor-label">
                @Html.LabelFor(model => model.Image)
            </div>
            <div class="columns small-10 editor-label">
                <img id="imgThumbnail" src="@Url.Content("~/Images/Noimage.jpg")" />
                <br />
                <img id="removeImgThumbnail" style="display:none;" class="removeCursor" src="@Url.Content("~/Images/delimg.png")" onclick="RemoveImg()" />
                <br />
            </div>
            <div class="columns push-2 small-12 editor-field padding-bottom-15">
                <input type="button" value="Select Image" onclick="$('#thumb-upload').trigger('click');">
                &nbsp; &nbsp;<text id="thumbnailFileName"></text><text id="upload-thumb-success" style="color: greenyellow; display: none;">&nbsp;&nbsp; Success</text>&nbsp;&nbsp;
                <img src="@Url.Content("~/Images/loading.gif")" id="loading" style="display:none;" />
            </div>


            <div class="columns small-2 editor-label">
                File 
            </div>
            <div class="columns small-10 editor-field padding-bottom-15">
                <input type="button" value="Select File" onclick="$('#file-upload').trigger('click');">
                &nbsp; &nbsp;<text id="txtFileName"></text><img id="removeFile" class="removeCursor" style="display:none;" src="@Url.Content("~/Images/delimg.png")" onclick="RemoveFile()" /><text id="upload-file-success" style="color: greenyellow; display: none;">&nbsp;&nbsp; Success</text>&nbsp;&nbsp;
                <img src="@Url.Content("~/Images/loading.gif")" id="loading2" style="display:none;" />
            </div>

            <div class=" columns small-2 editor-label">
                @Html.LabelFor(model => model.Youtube)
            </div>
            <div class="columns small-10 editor-field">
                @Html.EditorFor(model => model.Youtube)
                @Html.ValidationMessageFor(model => model.Youtube)
            </div>

             <div class="columns small-2 editor-label">
                @Html.LabelFor(model => model.PageTitle)
            </div>
            <div class="columns small-10 editor-field">
                @Html.EditorFor(model => model.PageTitle)
                @Html.ValidationMessageFor(model => model.PageTitle)
            </div>
            
             <div class="columns small-2 editor-label">
                @Html.LabelFor(model => model.PageDescription)
            </div>
            <div class="columns small-10 editor-field">
                @Html.EditorFor(model => model.PageDescription)
                @Html.ValidationMessageFor(model => model.PageDescription)
            </div>
            
             <div class="columns small-2 editor-label">
                @Html.LabelFor(model => model.PageKeyword)
            </div>
            <div class="columns small-10 editor-field">
                @Html.EditorFor(model => model.PageKeyword)
                @Html.ValidationMessageFor(model => model.PageKeyword)
            </div>
            
            <input type="hidden" id="Image" name="Image" value="" />
            <input type="hidden" id="FileName" name="FileName" value="" />
            <input type="hidden" id="FileTitle" name="FileTitle" value="" />
            <input type="hidden" id="CreateID" name="CreateID" value="@createID" />
        }


        <div class="columns small-12 ">
            <form id="frmUpload" action="@Url.Action("UploadThumbnail", "SysPost")" method="post" enctype="multipart/form-data">
                <input type="file" name="files[]" id="thumb-upload" style="display: none;" accept="image/*" />
            </form>
        </div>
        <div class="columns small-12 ">
            <form id="frmFileUpload" action="@Url.Action("UploadFile", "SysPost")" method="post" enctype="multipart/form-data">
                <input type="file" name="files[]" id="file-upload" style="display: none;" />
            </form>
        </div>
        <div class="columns small-12 editor-label">
            Attachment Files
            <ul id="uploadResult"></ul>
        </div>
        <div class="columns small-12 ">
            <form id="frmAttachmentUpload" action="@Url.Action("UploadAttachment", "SysPost")?CreateID=@createID" method="post" enctype="multipart/form-data" class="dropzone">
                <input type="file" name="files[]" id="att-upload" style="display: none;" />
            </form>
        </div>
        <div class="columns small-12 text-right padding-top-20">
            <input type="button" onclick="Submit();" value="Save" class="button radius tiny" />
            &nbsp;
            <input type="button" value="Cancel" class="button radius tiny" onclick="history.back();" />
        </div>
    </div>
</fieldset>
@section Scripts {

    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/jqueryfileupload")

    <script src="~/Scripts/jquery.filedrop.js"></script>

    <script type="text/javascript" >

        function Submit() {

            var description = CKEDITOR.instances.txtDescription.getData();
            $("#Description").val(description);

            $('#main-form').submit();
        }

        function RemoveImg() {
            if (confirm("Do you want to remove the thumbnail?")) {
                $("#Image").val("");
                $("#imgThumbnail").attr("src", '@Url.Content("~/Images/Noimage.jpg")');
                $("#removeImgThumbnail").hide();
                $("#thumbnailFileName").hide();
                $("#upload-thumb-success").hide();
            }
        }

        function RemoveFile() {
            if (confirm("Do you want to remove file?")) {
                $("#FileName").val("");
                $("#txtFileName").html("");
                $("#FileTitle").val("");
                $("#removeFile").hide();
                $("#upload-file-success").hide();
            }
        }

        $(document).ready(function() {
            $("#IsPublish").prop('checked', true);
            $("#SysCategoryID").val('@catID');

            $("#frmUpload").fileupload({
                add: function(e, data) {
                    var goUpload = true;
                    var uploadFile = data.files[0];

                    $("#btn-submit").prop('disabled', true);
                    $("#thumbnailFileName").html(uploadFile.name);
                    $("#upload-thumb-success").hide();

                    if (!(/\.(jpg|png|JPG|PNG)$/i).test(uploadFile.name)) {
                        alert('สามารถอัพโหลดได้เฉพาะไฟล์ .jpg และ .png เท่านั้น');
                        $("#thumbnailFileName").html("");
                        goUpload = false;
                    }
                    /*  if (uploadFile.size > 200 * 1024 * 1024) {
                          alert('Please upload a smaller image, max size is 200 MB [' + uploadFile.name + ']');
                          goUpload = false;
                      } */
                    if (goUpload) {
                        $("#loading").show();
                        data.progressdiv = $("#uploading-origin").clone().attr("id", "").css("display", "").attr("title", uploadFile.name);
                        data.progressdiv.appendTo($("#drop-l"));
                        data.progressdiv.find(".glyphicon-repeat").on("click", function(event) {
                            event.stopPropagation();
                            data.progressdiv.find(".loading").show();
                            data.progressdiv.find(".retry").hide();
                            data.progressdiv.find(".progress-bar").css("width", "0%");
                            data.progressdiv.find(".progress-bar").removeClass("progress-bar-danger");
                            data.submit();
                        });
                        data.progressdiv.find(".glyphicon-remove").on("click", function(event) {
                            event.stopPropagation();
                            data.progressdiv.remove();
                            delete data;
                        });

                        data.progressdiv.on("click", function(event) {
                            event.stopPropagation();
                        });
                        $("#drop-l").removeClass("background");
                        data.submit();
                    }

                },
                progress: function(e, data) {
                    var progress = parseInt(data.loaded / data.total * 100, 10);
                    data.progressdiv.find(".progress-bar").css("width", progress + "%");
                },
                done: function(e, data) {
                    $("#loading").hide();
                    $("#upload-thumb-success").show();
                    $("#btn-submit").prop('disabled', false);
                    $("#Body").val(data.result);
                    setTimeout(function() {
                        data.progressdiv.remove();
                        if (!$("#drop-l").children().length) {
                            $("#drop-l").addClass("background");
                        }
                    }, 500);

                    var img_o = data.result;

                    $("#Image").val(img_o);

                    $("#imgThumbnail").attr("src", '@Url.Content("~/assets/thumbnail/")' + 'm-' + img_o);

                    $("#removeImgThumbnail").show();
                },
                fail: function(e, data) {

                    data.progressdiv.find(".loading").hide();
                    data.progressdiv.find(".retry").show();
                    data.progressdiv.find(".progress-bar").css("width", "100%");
                    data.progressdiv.find(".progress-bar").addClass("progress-bar-danger");
                }
            });


            $("#frmFileUpload").fileupload({
                add: function(e, data) {
                    var goUpload = true;
                    var uploadFile = data.files[0];

                    $("#btn-submit").prop('disabled', true);
                    $("#txtFileName").html(uploadFile.name);
                    $("#upload-file--success").hide();

                    //if (!(/\.(jpg|png|JPG|PNG)$/i).test(uploadFile.name)) {
                    //    alert('สามารถอัพโหลดได้เฉพาะไฟล์ .jpg และ .png เท่านั้น');
                    //    $("#txtFileName").html("");
                    //    goUpload = false;
                    //}
                    if (uploadFile.size > 200 * 1024 * 1024) {
                        alert('Please upload a smaller image, max size is 200 MB [' + uploadFile.name + ']');
                        $("#txtFileName").html("");
                        goUpload = false;
                    }
                    if (goUpload) {
                        $("#loading2").show();
                        data.progressdiv = $("#uploading-origin").clone().attr("id", "").css("display", "").attr("title", uploadFile.name);
                        data.progressdiv.appendTo($("#drop-l"));
                        data.progressdiv.find(".glyphicon-repeat").on("click", function(event) {
                            event.stopPropagation();
                            data.progressdiv.find(".loading").show();
                            data.progressdiv.find(".retry").hide();
                            data.progressdiv.find(".progress-bar").css("width", "0%");
                            data.progressdiv.find(".progress-bar").removeClass("progress-bar-danger");
                            data.submit();
                        });
                        data.progressdiv.find(".glyphicon-remove").on("click", function(event) {
                            event.stopPropagation();
                            data.progressdiv.remove();
                            delete data;
                        });

                        data.progressdiv.on("click", function(event) {
                            event.stopPropagation();
                        });
                        $("#drop-l").removeClass("background");
                        data.submit();
                    }

                },
                progress: function(e, data) {
                    var progress = parseInt(data.loaded / data.total * 100, 10);
                    data.progressdiv.find(".progress-bar").css("width", progress + "%");
                },
                done: function(e, data) {
                    $("#loading2").hide();
                    $("#upload-file-success").show();
                    $("#btn-submit").prop('disabled', false);
                    $("#Body").val(data.result);
                    setTimeout(function() {
                        data.progressdiv.remove();
                        if (!$("#drop-l").children().length) {
                            $("#drop-l").addClass("background");
                        }
                    }, 500);

                    $("#FileTitle").val(data.result.fileTitle);
                    $("#FileName").val(data.result.fileName);
                    $("#removeFile").show();

                },
                fail: function(e, data) {

                    data.progressdiv.find(".loading").hide();
                    data.progressdiv.find(".retry").show();
                    data.progressdiv.find(".progress-bar").css("width", "100%");
                    data.progressdiv.find(".progress-bar").addClass("progress-bar-danger");
                }
            });

        });

        $(function() {
            Dropzone.options.frmAttachmentUpload = {
                init: function() {
                    // config
                    this.options.addRemoveLinks = true;
                    this.options.dictRemoveFile = "Delete";
                    var hasError = false;
                    this.on("complete", function(file) {
                        var res = JSON.parse(file.xhr.responseText);
                        if (res.id != 0) {
                            if (this.getQueuedFiles().length == 0 && this.getUploadingFiles().length == 0 && !hasError) {
                                alert('All files have been uploaded successfully');
                            }
                        } else {
                            console.log(res.message);
                            hasError = true;
                            this.emit("removedfile", file);
                            alert('Error occurs during uploading file to server');
                        }
                    });

                    this.on("removedfile", function (file) {
                        var res = JSON.parse(file.xhr.responseText);
                        if (res.id == 0)
                            return;

                        if (confirm("Do you want to remove attachment?")) {
                            $.ajax({
                                url: '@Url.Action("DeleteAttachment", "SysPost")?attachID=' + res.id,
                                type: 'GET',
                                async: false,
                                success: function(data) {
                                    if (!data.result) {
                                        alert('Error occurs during deleting the file');
                                        return false;
                                    }
                                }
                            });
                        } else {
                            return false;
                        }

                    });
                }
            };
        });


        $.datepicker.setDefaults($.datepicker.regional['en']);
        $(".ui-datepicker-prev, .ui-datepicker-next").remove();
        $("#StartDate").datepicker({
            dateFormat: "dd-mm-yy",
            isBE: false,
            prevText: "", // Display text for previous month link
            nextText: "", // Display text for next month link
            autoConversionField: false,
            onClose: function() { $(this).attr('readonly', true); }
        });
        $("#StartDate").keypress(function(e) {
            e.preventDefault();
        });

        $.datepicker.setDefaults($.datepicker.regional['en']);
        $("#EndDate").datepicker({
            dateFormat: "dd-mm-yy",
            isBE: false,
            prevText: "", // Display text for previous month link
            nextText: "", // Display text for next month link
            autoConversionField: false,
            onClose: function() { $(this).attr('readonly', true); }
        });
        $("#EndDate").keypress(function(e) {
            e.preventDefault();
        });


        //$.validator.addMethod("date", function (value, element) {
        //    return this.optional(element) || /^\d\d?-\d\d-\d\d\d\d/.test(value);
        //}, "Please specify the date in DD-MM-YYYY format");

    </script>

}