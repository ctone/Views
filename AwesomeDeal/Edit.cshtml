@model DiethelmTSWebsite2015.Models.SysPost

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@using (Html.BeginForm()) {
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>SysPost</legend>

        @Html.HiddenFor(model => model.ID)

        <div class="editor-label">
            @Html.LabelFor(model => model.CountryID)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.CountryID)
            @Html.ValidationMessageFor(model => model.CountryID)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.SysCategoryID)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.SysCategoryID)
            @Html.ValidationMessageFor(model => model.SysCategoryID)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Title)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Title)
            @Html.ValidationMessageFor(model => model.Title)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ShortDescription)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.ShortDescription)
            @Html.ValidationMessageFor(model => model.ShortDescription)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Description)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Description)
            @Html.ValidationMessageFor(model => model.Description)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Seq)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Seq)
            @Html.ValidationMessageFor(model => model.Seq)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Code)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Code)
            @Html.ValidationMessageFor(model => model.Code)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Image)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Image)
            @Html.ValidationMessageFor(model => model.Image)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.IsPublish)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.IsPublish)
            @Html.ValidationMessageFor(model => model.IsPublish)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.IsHighlight)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.IsHighlight)
            @Html.ValidationMessageFor(model => model.IsHighlight)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.StartDate)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.StartDate)
            @Html.ValidationMessageFor(model => model.StartDate)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.EndDate)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.EndDate)
            @Html.ValidationMessageFor(model => model.EndDate)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ShowOnlyMember)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.ShowOnlyMember)
            @Html.ValidationMessageFor(model => model.ShowOnlyMember)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.FileTitle)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.FileTitle)
            @Html.ValidationMessageFor(model => model.FileTitle)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.FileName)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.FileName)
            @Html.ValidationMessageFor(model => model.FileName)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Youtube)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Youtube)
            @Html.ValidationMessageFor(model => model.Youtube)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Status)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Status)
            @Html.ValidationMessageFor(model => model.Status)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.CreateDate)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.CreateDate)
            @Html.ValidationMessageFor(model => model.CreateDate)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.CreateBy)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.CreateBy)
            @Html.ValidationMessageFor(model => model.CreateBy)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.UpdateDate)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.UpdateDate)
            @Html.ValidationMessageFor(model => model.UpdateDate)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.UpdateBy)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.UpdateBy)
            @Html.ValidationMessageFor(model => model.UpdateBy)
        </div>

        <p>
            <input type="submit" value="Save" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
