@model DiethelmTSWebsite2015.Models.SysCategory

@{
    ViewBag.Title = "Create";

    string country = Request.RequestContext.RouteData.Values["country"].ToString();
    DiethelmTSWebsite2015.Biz.CountryCollection countryColl = new DiethelmTSWebsite2015.Biz.CountryCollection();

    DiethelmTSWebsite2015.Biz.SysCategoryBiz catBiz = new DiethelmTSWebsite2015.Biz.SysCategoryBiz();
    var catList = catBiz.Get(countryColl[country].ID);

    DiethelmTSWebsite2015.Biz.SysPostBiz postBiz = new DiethelmTSWebsite2015.Biz.SysPostBiz();
    var postList = postBiz.Get(countryColl[country].ID);

    var parentID = Request.QueryString["parentID"] == null ? "" : Request.QueryString["parentID"];
}

@section Header {
    @Scripts.Render("~/bundles/ckeditor")
}

@using (Html.BeginForm("Create","SysCategory", FormMethod.Post, new { id= "main-form"}))
{
    @Html.ValidationSummary(true)
    @Html.HiddenFor(model=>model.Image)
    <input type="hidden" id="CountryID" name="CountryID" value="@countryColl[country].ID" />
    
    <fieldset>
        <legend>Create Category</legend>
        <div class="row">
            <div class="columns small-2 editor-label">
                @Html.LabelFor(model => model.ParentID, "Parent")
            </div>
            <div class="columns small-10 editor-field">
                <select id="ParentID" name="ParentID">
                    <option value="">None</option>

                    @foreach (var item in catList)
                    {
                        <option value="@item.ID">@item.Title</option>
                    }
                </select>
            </div>

            <div class="columns small-2 editor-label">
                @Html.LabelFor(model => model.Title)
            </div>
            <div class="columns small-10 editor-field">
                @Html.EditorFor(model => model.Title)
                @Html.ValidationMessageFor(model => model.Title)
            </div>

            <div class="columns small-12 large-2 editor-label">
                Publish
            </div>
            <div class="columns small-12 large-10 editor-field">
                @Html.EditorFor(model => model.IsPublishBackend) Publish to backend <br />
                @Html.EditorFor(model => model.IsPublishFontend) Publish to fontend
            </div>

            <div class="columns small-2 editor-label">
                @Html.LabelFor(model => model.Type)
            </div>
            <div class="columns small-10 editor-field">
                <select id="Type" name="Type">
                    <option value="NONE" selected>None</option>
                    <option value="LIST">List</option>
                    <option value="SINGLE">Single Content</option>
                    <option value="CUSTOM_VIEW">Custom View</option>
                    <option value="LINK">Link</option>
                </select>
            </div>
            <div class="columns small-2 editor-label">
                @Html.LabelFor(model => model.Code)
            </div>
            <div class="columns small-10 editor-field">
                @Html.EditorFor(model => model.Code)
                @Html.ValidationMessageFor(model => model.Code)
            </div>
            <div class="columns small-12 editor-label">
                @Html.LabelFor(model=>model.Description)
            </div>
            <div class="columns small-12 editor-field margin-bottom-15">
                @Html.TextArea("txtDescription", new {@class="ckeditor"})
                @Html.HiddenFor(model=>model.Description)
            </div>
            
            <div class="columns small-2 editor-label">
                @Html.LabelFor(model => model.Image)
            </div>
            <div class="columns small-10 editor-label">
                <img id="imgThumbnail" src="@Url.Content("~/Images/Noimage.jpg")" />
                <br />
                <img id="removeImgThumbnail" style="display:none;" class="removeCursor" src="@Url.Content("~/Images/delimg.png")" onclick="RemoveImg()" />
                <br />
            </div>
            <div class="columns push-2 small-12 editor-field padding-bottom-15">
                <input type="button" value="Select Image" onclick="$('#thumb-upload').trigger('click');">
                &nbsp; &nbsp;<text id="thumbnailFileName"></text><text id="upload-thumb-success" style="color: greenyellow; display: none;">&nbsp;&nbsp; Success</text>&nbsp;&nbsp;
                <img src="@Url.Content("~/Images/loading.gif")" id="loading" style="display:none;" />
            </div>
            
            <div class="columns small-12 large-2 editor-label">
                @Html.LabelFor(model=>model.ImageAlt)
            </div>
            <div class="columns small-12 large-10 editor-field">
                @Html.TextBoxFor(model=>model.ImageAlt)
            </div>
            
            <div class="columns small-12 large-2 editor-label">
                @Html.LabelFor(model=>model.ImageTitle)
            </div>
            <div class="columns small-12 large-10 editor-field">
                @Html.TextBoxFor(model=>model.ImageTitle)
            </div>

            <div id="customView" style="display: none;">

                <div class="columns small-2 editor-label">
                    @Html.LabelFor(model => model.ControllerName, "Controller Name")
                </div>
                <div class="columns small-10 editor-field">
                    @Html.EditorFor(model => model.ControllerName)
                    @Html.ValidationMessageFor(model => model.ControllerName)
                </div>

                <div class="columns small-2 editor-label">
                    @Html.LabelFor(model => model.FrontendViewName, "Fontend View Name")
                </div>
                <div class="columns small-10 editor-field">
                    @Html.EditorFor(model => model.FrontendViewName)
                    @Html.ValidationMessageFor(model => model.FrontendViewName)
                </div>

                <div class="columns small-2 editor-label">
                    @Html.LabelFor(model => model.FrontendParam)
                </div>
                <div class="columns small-10 editor-field">
                    @Html.EditorFor(model => model.FrontendParam)
                    @Html.ValidationMessageFor(model => model.FrontendParam)
                </div>

                <div class="columns small-2 editor-label">
                    @Html.LabelFor(model => model.RedirectManageAble)
                </div>
                <div class="columns small-10 editor-field">
                    @Html.EditorFor(model => model.RedirectManageAble)
                    @Html.ValidationMessageFor(model => model.RedirectManageAble)
                </div>
            </div>
            <div id="linkView" style="display: none;">
                <div class="columns small-2 editor-label">
                    @Html.LabelFor(model => model.Link)
                </div>
                <div class="columns small-10 editor-field">
                    @Html.EditorFor(model => model.Link)
                    @Html.ValidationMessageFor(model => model.Link)
                </div>
            </div>
            <div class="columns small-12 text-right">
                <input type="submit" onclick="Submit();" value="Save" class="button radius tiny" /> 
                &nbsp;
                <input type="button" value="Cancel" class="button radius tiny" onclick="history.back();" />
            </div>
    </div>
</fieldset>
}
<div class="columns small-12 ">
    <form id="frmUpload" action="@Url.Action("UploadThumbnail", "SysCategory")" method="post" enctype="multipart/form-data">
        <input type="file" name="files[]" id="thumb-upload" style="display: none;" accept="image/*" />
    </form>
</div>

@section Scripts {
    
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/jqueryfileupload")
    
    <script type="text/javascript">
        $(document).ready(function () {
            $("#ParentID").val("@parentID");

            $("#Type").change(function () {
                if ($('#Type').val() == "CUSTOM_VIEW") {
                    $('#customView').attr("style", "display:block");
                    $('#linkView').attr("style", "display:none");
                }
                else if ($('#Type').val() == "LINK") {
                    $('#customView').attr("style", "display:none");
                    $('#linkView').attr("style", "display:block");
                }
                else {
                    $('#customView').attr("style", "display:none");
                    $('#linkView').attr("style", "display:none");
                }
            });

            $("#frmUpload").fileupload({
                add: function (e, data) {
                    var goUpload = true;
                    var uploadFile = data.files[0];

                    $("#btn-submit").prop('disabled', true);
                    $("#thumbnailFileName").html(uploadFile.name);
                    $("#upload-thumb-success").hide();

                    if (!(/\.(jpg|png|JPG|PNG)$/i).test(uploadFile.name)) {
                        alert('สามารถอัพโหลดได้เฉพาะไฟล์ .jpg และ .png เท่านั้น');
                        $("#thumbnailFileName").html("");
                        goUpload = false;
                    }

                    if (goUpload) {
                        $("#loading").show();
                        data.progressdiv = $("#uploading-origin").clone().attr("id", "").css("display", "").attr("title", uploadFile.name);
                        data.progressdiv.appendTo($("#drop-l"));
                        data.progressdiv.find(".glyphicon-repeat").on("click", function (event) {
                            event.stopPropagation();
                            data.progressdiv.find(".loading").show();
                            data.progressdiv.find(".retry").hide();
                            data.progressdiv.find(".progress-bar").css("width", "0%");
                            data.progressdiv.find(".progress-bar").removeClass("progress-bar-danger");
                            data.submit();
                        });
                        data.progressdiv.find(".glyphicon-remove").on("click", function (event) {
                            event.stopPropagation();
                            data.progressdiv.remove();
                            delete data;
                        });

                        data.progressdiv.on("click", function (event) {
                            event.stopPropagation();
                        });
                        $("#drop-l").removeClass("background");
                        data.submit();
                    }

                },
                progress: function (e, data) {
                    var progress = parseInt(data.loaded / data.total * 100, 10);
                    data.progressdiv.find(".progress-bar").css("width", progress + "%");
                },
                done: function (e, data) {
                    $("#loading").hide();
                    $("#upload-thumb-success").show();
                    $("#btn-submit").prop('disabled', false);
                    $("#Body").val(data.result);
                    setTimeout(function () {
                        data.progressdiv.remove();
                        if (!$("#drop-l").children().length) {
                            $("#drop-l").addClass("background");
                        }
                    }, 500);

                    var img_o = data.result;

                    $("#Image").val(img_o);

                    $("#imgThumbnail").attr("src", '@Url.Content("~/assets/thumbnail/")' + 'm-' + img_o);

                    $("#removeImgThumbnail").show();
                },
                 fail: function (e, data) {

                     data.progressdiv.find(".loading").hide();
                     data.progressdiv.find(".retry").show();
                     data.progressdiv.find(".progress-bar").css("width", "100%");
                     data.progressdiv.find(".progress-bar").addClass("progress-bar-danger");
                 }
             });
        });

        function Submit() {
            var description = CKEDITOR.instances.txtDescription.getData();
            $('input[name="Description"]').val(description);

            $('#main-form').submit();
        }

        function RemoveImg() {
            if (confirm("Do you want to remove the thumbnail?")) {
                $("#Image").val("");
                $("#imgThumbnail").attr("src", '@Url.Content("~/Images/Noimage.jpg")');
                $("#removeImgThumbnail").hide();
                $("#thumbnailFileName").hide();
                $("#upload-thumb-success").hide();
            }
        }

    </script>
}



